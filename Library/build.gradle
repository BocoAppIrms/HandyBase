//noinspection GradleDependency
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {

    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 247
        versionName "2.4.7"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [eventBusIndex: 'com.example.myapp.MyEventBusIndex']
            }
        }

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //androidSupport
    api 'com.android.support:design:27.1.1'
    api 'com.android.support:appcompat-v7:27.1.1'
    //gson
    api 'com.google.code.gson:gson:2.8.4'
    //fastjson
    api 'com.alibaba:fastjson:1.2.47'
    //AndroidUtilCode
    api 'com.blankj:utilcode:1.16.4'
    //Bugly
    api 'com.tencent.bugly:crashreport_upgrade:1.3.4'
    api 'com.tencent.bugly:nativecrashreport:3.3.1'
    //EventBus
    api 'org.greenrobot:eventbus:3.1.1'
    annotationProcessor 'org.greenrobot:eventbus-annotation-processor:3.1.1'
    //DBFlow
    api 'com.github.Raizlabs.DBFlow:dbflow:4.2.4'
    api 'com.github.Raizlabs.DBFlow:dbflow-core:4.2.4'
    api 'com.github.Raizlabs.DBFlow:dbflow-sqlcipher:4.2.4'
    annotationProcessor 'com.github.Raizlabs.DBFlow:dbflow-processor:4.2.4'
    //Retrofit
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    //Dagger2
    api 'com.google.dagger:dagger:2.16'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.16'
    //RXJava
    api 'io.reactivex.rxjava2:rxjava:2.1.14-RC1'
    //RXAndroid
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    //RxLifeCycle2
    api 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'
    //BGASwipeBackLayout
    api 'cn.bingoogolapple:bga-swipebacklayout:1.1.8'
    //BaseRecyclerViewAdapterHelper
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.40'
    //Glide
    api 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    //ButterKnife
    api 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}

//-------------------- jitPack生成文档 --------------------
tasks.withType(JavaCompile) { //指定编码
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar) { //打包源码
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) { //制作文档(Javadoc)
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
